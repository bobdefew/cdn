{
  "swagger" : "2.0",
  "info" : {
    "description" : "Ability to Create, Read, Update, and Delete files from the SAN or CDN.",
    "version" : "1.0.0",
    "title" : "CDN",
    "contact" : { }
  },
  "host" : "pf2.performancefit.com",
  "basePath" : "/cdn/v1",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json", "multipart/form-data" ],
  "produces" : [ "application/json", "multipart/form-data" ],
  "security" : [ {
    "JWT" : [ ]
  } ],
  "paths" : {
    "/files" : {
      "get" : {
        "summary" : "List files",
        "description" : "Retrieve list of most current version of files",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pgstart",
          "in" : "query",
          "required" : false,
          "type" : "number",
          "description" : "Initial item/offset; negative numbers start from the end backwards (e.g. pgstart=-10&pglen=-1 would give the last 10 items).",
          "default" : 0.0,
          "x-example" : 0.0
        }, {
          "name" : "pglen",
          "in" : "query",
          "required" : false,
          "type" : "number",
          "description" : "The number of items to return in the page; a length of -1 means return all items.",
          "default" : 10.0,
          "x-example" : 100.0
        }, {
          "name" : "showDeleted",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "Set this to true to show deleted entries.",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "Files" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CdnFile"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a file",
        "description" : "Multipart upload with two upload parts:\n1. JSON describing the file\n2. The actual file upload",
        "consumes" : [ "application/json" ],
        "produces" : [ "multipart/form-data", "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CdnFile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/CdnFile"
            },
            "examples" : {
              "multipart/form-data" : "{\n  \"_id\": \"58cf417f-20ee-47f0-884a-e286e6400046\",\n  \"type\"\": \"image/png\",\n  \"version\": \"1\",\n  \"url\"\": \"/files/file1_1.png\",\n  \"view_style\": 0,\n  \"secure\": false,\n  \"delete_flag\": false\n}"
            }
          },
          "400" : {
            "description" : "Missing values",
            "schema" : {
              "$ref" : "#/definitions/Error"
            },
            "examples" : {
              "application/json" : "{\"code\":\"PFERR-ALL-001\", \"desc\":\"Fields values are invalid or missing.\", \"fields\":[\"type\",\"secure\",\"delete_flag\",\"file\"]}"
            }
          }
        }
      }
    },
    "/files/{id}" : {
      "get" : {
        "summary" : "Get all versions of a file",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "showDeleted",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "Set this to true to show deleted entries.",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "When versioned objects are requested",
            "schema" : {
              "$ref" : "#/definitions/VersionedCdnFile"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a file",
        "description" : "Since files are immutable, this will create a new version of a file.  The current latest version will be added to the versions array and the provided file will overwrite the latest.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CdnFile"
          },
          "x-examples" : {
            "application/json" : "{\n  \"_id\": \"58cf417f-20ee-47f0-884a-e286e6400046\",\n  \"type\"\": \"image/png\",\n  \"version\": \"2\",\n  \"url\"\": \"/files/file1_2.png\",\n  \"view_style\": 0,\n  \"secure\": false,\n  \"delete_flag\": false\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "When versioned objects are requested",
            "schema" : {
              "$ref" : "#/definitions/CdnFile"
            }
          },
          "400" : {
            "description" : "Missing or invalid field values",
            "schema" : {
              "$ref" : "#/definitions/Error"
            },
            "examples" : {
              "application/json" : "{\"code\":\"PFERR-ALL-001\", \"desc\":\"Fields values are invalid or missing.\", \"fields\":[\"type\",\"secure\",\"delete_flag\",\"file\"]}"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete all file versions",
        "description" : "Mark all file versions as deleted.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "result" ],
              "type" : "object",
              "properties" : {
                "result" : {
                  "type" : "string",
                  "enum" : [ "SUCCESS" ]
                }
              }
            },
            "examples" : {
              "application/json" : "{\"result\":\"SUCCESS\"}"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "UUID"
      } ]
    },
    "/files/{id}/{vid}" : {
      "get" : {
        "summary" : "Get a file",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "showDeleted",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "Set this to true to show deleted entries.",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "When versioned objects are requested",
            "schema" : {
              "$ref" : "#/definitions/CdnFile"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a file",
        "description" : "Mark the file version as deleted.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "result" ],
              "type" : "object",
              "properties" : {
                "result" : {
                  "type" : "string",
                  "enum" : [ "SUCCESS" ]
                }
              }
            },
            "examples" : {
              "application/json" : "{\"result\":\"SUCCESS\"}"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "The ID",
        "x-example" : "033567bd-6ef7-40fa-9337-a53db6f38e94"
      }, {
        "name" : "vid",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "The version ID or LATEST to get the most recent version.",
        "x-example" : "033567bd-6ef7-40fa-9337-a53db6f38e94"
      } ]
    },
    "/files/{id}/{vid}/content" : {
      "get" : {
        "summary" : "Download a file",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "string",
              "format" : "binary",
              "description" : "The content type will be determioned by the type of file or metadata provided."
            },
            "headers" : {
              "Content-Disposition" : {
                "type" : "string",
                "x-example" : "Content-disposition: attachment; filename=file1_4.png;"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "vid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    }
  },
  "securityDefinitions" : {
    "JWT" : {
      "description" : "JSON Web Token (JWT) sent either as a cookie or in the Authorization header as a bearer token",
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "Error" : {
      "type" : "object",
      "required" : [ "errors" ],
      "properties" : {
        "errors" : {
          "type" : "array",
          "description" : "This must contain one or more errors in the errors array.",
          "items" : {
            "required" : [ "code" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "See examples for documentation on each specific error message.",
                "enum" : [ "PFERR-CDN-001", "PFERR-CDN-002" ]
              },
              "desc" : {
                "type" : "string",
                "description" : "Describes the error code for debugging purposes. This will not be returned in production environments. See examples for documentation on each specific error message."
              },
              "fields" : {
                "type" : "array",
                "description" : "All fields that failed validation.",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "description" : "Defines a standard error response object.",
      "example" : "{\n    \"errors\": [\n        {\"code\":\"PFERR-ALL-001\", \"desc\":\"Fields values are invalid or missing.\", \"fields\":[]},\n        {\"code\":\"PFERR-CDN-001\", \"desc\":\"description of error 001\"},\n        {\"code\":\"PFERR-CDN-002\", \"desc\":\"description of error 002\"}\n    ]\n}"
    },
    "CdnFile" : {
      "type" : "object",
      "required" : [ "secure" ],
      "properties" : {
        "_id" : {
          "type" : "string",
          "description" : "UUID"
        },
        "version" : {
          "type" : "string",
          "description" : "UUID"
        },
        "mimeType" : {
          "type" : "string",
          "description" : "Mime-type of content."
        },
        "disposition" : {
          "type" : "string",
          "description" : "Content disposition.",
          "default" : "inline",
          "enum" : [ "inline", "attachment" ]
        },
        "secure" : {
          "type" : "boolean",
          "description" : "Indicates if content requires valid authentication token."
        },
        "url" : {
          "type" : "string",
          "description" : "Externally accessible URL for content."
        },
        "deleted" : {
          "type" : "boolean",
          "description" : "Indicates if file has been soft deleted."
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdBy" : {
          "type" : "string",
          "description" : "UUID"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "string",
          "description" : "UUID"
        }
      },
      "description" : "File info for files stored in CDN",
      "example" : "{\n    \"version\": \"1a3cc53e-5935-4366-a233-a22aa7840773\",\n    \"mimeType\": \"text/vtt\",\n    \"disposition\": \"inline\",\n    \"secure\": true,\n    \"url\": \"http://localhost:3000/cdn/content/77ddb2a9-dcc1-490d-8d35-25202a0bcea0/1a3cc53e-5935-4366-a233-a22aa7840773\",\n    \"deleted\": false,\n    \"modified\": \"2018-01-29T17:56:08.177Z\",\n    \"modifiedBy\": \"02d29ccd-70b6-4a88-a775-d68bc0b1cf66\",\n    \"_id\": \"77ddb2a9-dcc1-490d-8d35-25202a0bcea0\",\n    \"created\": \"2018-01-29T17:56:08.177Z\",\n    \"createdBy\": \"02d29ccd-70b6-4a88-a775-d68bc0b1cf66\"\n}"
    },
    "VersionedCdnFile" : {
      "type" : "object",
      "properties" : {
        "_id" : {
          "type" : "string",
          "description" : "UUID"
        },
        "latest" : {
          "$ref" : "#/definitions/CdnFile"
        },
        "previousVersions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CdnFile"
          }
        }
      },
      "description" : "A wrapper for versioned data types.",
      "example" : "{\n  \"_id\": \"77ddb2a9-dcc1-490d-8d35-25202a0bcea0\",\n  \"latest\": {\n    \"version\": \"333cc53e-5935-4366-a233-a22aa7840773\",\n    \"mimeType\": \"text/vtt\",\n    \"disposition\": \"inline\",\n    \"secure\": true,\n    \"url\": \"http://localhost:3000/cdn/content/77ddb2a9-dcc1-490d-8d35-25202a0bcea0/1a3cc53e-5935-4366-a233-a22aa7840773\",\n    \"deleted\": false,\n    \"modified\": \"2018-01-29T17:56:08.177Z\",\n    \"modifiedBy\": \"02d29ccd-70b6-4a88-a775-d68bc0b1cf66\",\n    \"_id\": \"77ddb2a9-dcc1-490d-8d35-25202a0bcea0\",\n    \"created\": \"2018-01-29T17:56:08.177Z\",\n    \"createdBy\": \"02d29ccd-70b6-4a88-a775-d68bc0b1cf66\"\n  },\n  \"previousVersions\": [\n    {\n      \"version\": \"111cc53e-5935-4366-a233-a22aa7840773\",\n      \"mimeType\": \"text/vtt\",\n      \"disposition\": \"inline\",\n      \"secure\": true,\n      \"url\": \"http://localhost:3000/cdn/content/77ddb2a9-dcc1-490d-8d35-25202a0bcea0/1a3cc53e-5935-4366-a233-a22aa7840773\",\n      \"deleted\": false,\n      \"modified\": \"2018-01-29T17:56:08.177Z\",\n      \"modifiedBy\": \"02d29ccd-70b6-4a88-a775-d68bc0b1cf66\",\n      \"_id\": \"77ddb2a9-dcc1-490d-8d35-25202a0bcea0\",\n      \"created\": \"2018-01-29T17:56:08.177Z\",\n      \"createdBy\": \"02d29ccd-70b6-4a88-a775-d68bc0b1cf66\"\n    },\n    {\n      \"version\": \"222cc53e-5935-4366-a233-a22aa7840773\",\n      \"mimeType\": \"text/vtt\",\n      \"disposition\": \"inline\",\n      \"secure\": true,\n      \"url\": \"http://localhost:3000/cdn/content/77ddb2a9-dcc1-490d-8d35-25202a0bcea0/1a3cc53e-5935-4366-a233-a22aa7840773\",\n      \"deleted\": false,\n      \"modified\": \"2018-01-29T17:56:08.177Z\",\n      \"modifiedBy\": \"02d29ccd-70b6-4a88-a775-d68bc0b1cf66\",\n      \"_id\": \"77ddb2a9-dcc1-490d-8d35-25202a0bcea0\",\n      \"created\": \"2018-01-29T17:56:08.177Z\",\n      \"createdBy\": \"02d29ccd-70b6-4a88-a775-d68bc0b1cf66\"\n    }\n  ]\n}"
    }
  }
}